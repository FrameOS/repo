{
  "edges": [
    {
      "id": "a9bf1ea8-137d-4ba0-92d0-7fd3322fea1e",
      "source": "a9bf1ea8-137d-4ba0-92d0-7fd3322fea1e",
      "sourceHandle": "fieldOutput",
      "target": "7bae8fb3-f31c-4966-ab75-3b77fba06f79",
      "targetHandle": "fieldInput/text",
      "type": "codeNodeEdge"
    },
    {
      "id": "e981d9ce-22ca-4994-9319-d36d1b996938",
      "source": "463556ab-e4fe-40c7-93f3-40bc723f454e",
      "sourceHandle": "next",
      "target": "22c56bc9-8e12-4f0a-a0cd-77fec8f96870",
      "targetHandle": "prev",
      "type": "appNodeEdge"
    },
    {
      "id": "2a75cf32-8dbb-4964-b17f-f8317c3125d6",
      "source": "22c56bc9-8e12-4f0a-a0cd-77fec8f96870",
      "sourceHandle": "next",
      "target": "2cee5e7b-e3b9-4e42-9dac-ef18a83e4122",
      "targetHandle": "prev",
      "type": "appNodeEdge"
    },
    {
      "id": "442dbbf5-0898-44e7-9f05-448ea1d16f83",
      "source": "442dbbf5-0898-44e7-9f05-448ea1d16f83",
      "sourceHandle": "fieldOutput",
      "target": "22c56bc9-8e12-4f0a-a0cd-77fec8f96870",
      "targetHandle": "fieldInput/text",
      "type": "codeNodeEdge"
    },
    {
      "id": "48c7e948-d3dd-4a30-a3d9-b3aaf334019a",
      "source": "2cee5e7b-e3b9-4e42-9dac-ef18a83e4122",
      "sourceHandle": "next",
      "target": "7bae8fb3-f31c-4966-ab75-3b77fba06f79",
      "targetHandle": "prev",
      "type": "appNodeEdge"
    },
    {
      "id": "2b1268e7-f738-4e4a-acbb-9d6b4b26468e",
      "source": "7bae8fb3-f31c-4966-ab75-3b77fba06f79",
      "sourceHandle": "next",
      "target": "bfc7a703-2a31-4078-81a3-518a0aa4dadd",
      "targetHandle": "prev",
      "type": "appNodeEdge"
    },
    {
      "id": "155dc053-52ad-42a6-97de-2b63b8191dd7",
      "source": "155dc053-52ad-42a6-97de-2b63b8191dd7",
      "sourceHandle": "fieldOutput",
      "target": "a9bf1ea8-137d-4ba0-92d0-7fd3322fea1e",
      "targetHandle": "codeField/stars",
      "type": "codeNodeEdge"
    },
    {
      "id": "d6732a92-312e-4a10-8e33-53801763d29a",
      "source": "442dbbf5-0898-44e7-9f05-448ea1d16f83",
      "sourceHandle": "fieldOutput",
      "target": "2cee5e7b-e3b9-4e42-9dac-ef18a83e4122",
      "targetHandle": "fieldInput/repo",
      "type": "codeNodeEdge"
    }
  ],
  "fields": [
    {
      "access": "public",
      "label": "Repository",
      "name": "repository",
      "persist": "disk",
      "placeholder": "user/repo",
      "type": "string",
      "value": "FrameOS/frameos"
    },
    {
      "access": "private",
      "label": "Stars",
      "name": "stars",
      "persist": "disk",
      "type": "integer",
      "value": "0"
    }
  ],
  "id": "903de523-7aec-48db-9af0-dd8fc8c76624",
  "name": "Github Stars",
  "nodes": [
    {
      "data": {
        "keyword": "render"
      },
      "dragging": false,
      "height": 96,
      "id": "463556ab-e4fe-40c7-93f3-40bc723f454e",
      "position": {
        "x": 24.069306644944845,
        "y": -17.176915634223434
      },
      "positionAbsolute": {
        "x": 24.069306644944845,
        "y": -17.176915634223434
      },
      "selected": false,
      "type": "event",
      "width": 183
    },
    {
      "data": {
        "config": {},
        "keyword": "code",
        "sources": {
          "app.nim": "import json, strformat\nimport pixie, httpclient\nimport times\nimport frameos/types\n\ntype\n  AppConfig* = object\n    repo*: string\n    stateKey*: string\n    interval*: int\n\n  App* = ref object\n    nodeId*: NodeId\n    scene*: FrameScene\n    frameConfig*: FrameConfig\n    appConfig*: AppConfig\n    lastFetchAt*: float\n    lastStarCount*: int\n\nproc init*(nodeId: NodeId, scene: FrameScene, appConfig: AppConfig): App =\n  result = App(\n    nodeId: nodeId,\n    scene: scene,\n    frameConfig: scene.frameConfig,\n    appConfig: appConfig,\n  )\n\nproc log*(self: App, message: string) =\n  self.scene.logger.log(%*{\"event\": &\"{self.nodeId}:log\", \"message\": message})\n\nproc error*(self: App, message: string) =\n  self.scene.logger.log(%*{\"event\": &\"{self.nodeId}:error\", \"error\": message})\n\nproc getGitHubRepoStars(repo: string, authToken: string): int =\n  let client = newHttpClient()\n  if authToken != \"\":\n    client.headers = newHttpHeaders([(\"Authorization\", \"token \" & authToken)])\n  let url = \"https://api.github.com/repos/\" & repo\n  try:\n    let response = client.getContent(url)\n    let parsed = parseJson(response)\n    return parsed[\"stargazers_count\"].getInt\n  except:\n    return -1\n\nproc run*(self: App, context: ExecutionContext) =\n  var stars = self.lastStarCount\n  if self.lastFetchAt < epochTime() - float(self.appConfig.interval):\n    let authToken = self.frameConfig.settings{\"github\"}{\"api_key\"}.getStr()\n    stars = getGitHubRepoStars(self.appConfig.repo, authToken)\n    self.lastFetchAt = epochTime()\n    if stars > -1:\n      self.lastStarCount = stars\n      self.log(&\"Found {stars} stars for repository: {self.appConfig.repo}\")\n      self.scene.state[\"stars\"] = %*(stars)\n    else:\n      self.log(&\"Error fetching stars for repository {self.appConfig.repo}\")\n\n",
          "config.json": "{\n  \"name\": \"Github Stars to State\",\n  \"description\": \"Save a repository's state count to a state variable\",\n  \"version\": \"1.0.0\",\n  \"fields\": [\n    {\n      \"name\": \"repo\",\n      \"label\": \"Repository\",\n      \"type\": \"string\",\n      \"value\": \"FrameOS/frameos\",\n      \"required\": true\n    },\n    {\n      \"name\": \"stateKey\",\n      \"label\": \"State Key\",\n      \"type\": \"string\",\n      \"value\": \"stars\",\n      \"required\": true\n    },\n    {\n      \"name\": \"interval\",\n      \"label\": \"Fetch interval in seconds\",\n      \"type\": \"integer\",\n      \"value\": \"60\",\n      \"required\": true\n    }\n  ]\n}"
        }
      },
      "dragging": false,
      "height": 134,
      "id": "2cee5e7b-e3b9-4e42-9dac-ef18a83e4122",
      "position": {
        "x": 700.3594753005418,
        "y": 38.507836103526984
      },
      "positionAbsolute": {
        "x": 700.3594753005418,
        "y": 38.507836103526984
      },
      "selected": false,
      "type": "app",
      "width": 376
    },
    {
      "data": {
        "config": {},
        "keyword": "text"
      },
      "dragging": false,
      "height": 336,
      "id": "7bae8fb3-f31c-4966-ab75-3b77fba06f79",
      "position": {
        "x": 1211.9276375806458,
        "y": 72.21705598804891
      },
      "positionAbsolute": {
        "x": 1211.9276375806458,
        "y": 72.21705598804891
      },
      "selected": false,
      "type": "app",
      "width": 294
    },
    {
      "data": {
        "code": "if stars >= 0: $stars & \" star\" & (if stars == 1: \"\" else: \"s\") else: \"Error fetching stars\"",
        "codeFields": [
          "stars"
        ]
      },
      "dragging": false,
      "height": 155,
      "id": "a9bf1ea8-137d-4ba0-92d0-7fd3322fea1e",
      "position": {
        "x": 1176.1050179723645,
        "y": -145.72800911630532
      },
      "positionAbsolute": {
        "x": 1176.1050179723645,
        "y": -145.72800911630532
      },
      "resizing": false,
      "selected": false,
      "style": {
        "height": 155,
        "width": 505
      },
      "type": "code",
      "width": 505
    },
    {
      "data": {
        "config": {
          "fontSize": "16",
          "format": "yyyy-MM-dd",
          "position": "bottom-right"
        },
        "keyword": "clock"
      },
      "dragging": false,
      "height": 380,
      "id": "bfc7a703-2a31-4078-81a3-518a0aa4dadd",
      "position": {
        "x": 1661.1906865190413,
        "y": 69.8404807016272
      },
      "positionAbsolute": {
        "x": 1661.1906865190413,
        "y": 69.8404807016272
      },
      "selected": false,
      "type": "app",
      "width": 372
    },
    {
      "data": {
        "config": {
          "fontSize": "16",
          "position": "top-left"
        },
        "keyword": "text"
      },
      "dragging": false,
      "height": 336,
      "id": "22c56bc9-8e12-4f0a-a0cd-77fec8f96870",
      "position": {
        "x": 298.0615807735932,
        "y": 11.102980613753402
      },
      "positionAbsolute": {
        "x": 298.0615807735932,
        "y": 11.102980613753402
      },
      "selected": false,
      "type": "app",
      "width": 294
    },
    {
      "data": {
        "code": "state{\"repository\"}.getStr()"
      },
      "dragging": false,
      "height": 130,
      "id": "442dbbf5-0898-44e7-9f05-448ea1d16f83",
      "position": {
        "x": 635.0244904679896,
        "y": -174.21946053658314
      },
      "positionAbsolute": {
        "x": 635.0244904679896,
        "y": -174.21946053658314
      },
      "resizing": false,
      "selected": false,
      "style": {
        "height": 130,
        "width": 304
      },
      "type": "code",
      "width": 304
    },
    {
      "data": {
        "code": "state{\"stars\"}.getInt()",
        "codeFields": []
      },
      "dragging": false,
      "height": 130,
      "id": "155dc053-52ad-42a6-97de-2b63b8191dd7",
      "position": {
        "x": 1175.590605360396,
        "y": -322.4433166380863
      },
      "positionAbsolute": {
        "x": 1175.590605360396,
        "y": -322.4433166380863
      },
      "resizing": false,
      "selected": false,
      "style": {
        "height": 130,
        "width": 290
      },
      "type": "code",
      "width": 290
    }
  ],
  "settings": {
    "backgroundColor": "#000000",
    "refreshInterval": 60
  }
}